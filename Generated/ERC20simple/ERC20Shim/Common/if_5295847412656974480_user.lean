import Clear.ReasoningPrinciple


import Generated.ERC20simple.ERC20Shim.Common.if_5295847412656974480_gen


namespace ERC20Shim.Common

section

open Clear EVMState Ast Expr Stmt FunctionDefinition State Interpreter ExecLemmas OutOfFuelLemmas Abstraction YulNotation PrimOps ReasoningPrinciple Utilities 

def A_if_5295847412656974480 (s‚ÇÄ s‚Çâ : State) : Prop :=
  (if s‚ÇÄ["expr_2"]!! = 0
   then s‚ÇÄ
   else üö™s‚ÇÄ‚ü¶"expr_3"‚Ü¶0‚üß‚ü¶"expr_201_component"‚Ü¶0‚üß‚ü¶"_3"‚Ü¶s‚ÇÄ["var_from"]!!‚üß‚ü¶"expr_4"‚Ü¶s‚ÇÄ["var_from"]!!‚üß‚ü¶"expr_201_component_1"‚Ü¶s‚ÇÄ["var_from"]!!‚üß‚ü¶"_4"‚Ü¶s‚ÇÄ["var_to"]!!‚üß‚ü¶"expr_5"‚Ü¶s‚ÇÄ["var_to"]!!‚üß‚ü¶"expr_component"‚Ü¶s‚ÇÄ["var_to"]!!‚üß‚ü¶"var"‚Ü¶0‚üß‚ü¶"var_1"‚Ü¶s‚ÇÄ["var_from"]!!‚üß‚ü¶"var_2"‚Ü¶s‚ÇÄ["var_to"]!!‚üß) =
  s‚Çâ

lemma if_5295847412656974480_abs_of_concrete {s‚ÇÄ s‚Çâ : State} :
  Spec if_5295847412656974480_concrete_of_code s‚ÇÄ s‚Çâ ‚Üí
  Spec A_if_5295847412656974480 s‚ÇÄ s‚Çâ := by
  sorry

end

end ERC20Shim.Common
