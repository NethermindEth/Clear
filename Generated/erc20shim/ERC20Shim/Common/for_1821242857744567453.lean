import Clear.ReasoningPrinciple


import Generated.erc20shim.ERC20Shim.Common.for_1821242857744567453_gen

import Generated.erc20shim.ERC20Shim.Common.for_1821242857744567453_user


namespace ERC20Shim.Common

set_option autoImplicit false

section

open Clear EVMState Ast Expr Stmt FunctionDefinition State Interpreter ExecLemmas OutOfFuelLemmas Abstraction YulNotation PrimOps ReasoningPrinciple Utilities 

lemma for_1821242857744567453_post_abs_of_code {s₀ : State} {fuel : Nat} :
  ∀ s₉, exec fuel (Block for_1821242857744567453_post) s₀ = s₉ →
        Spec APost_for_1821242857744567453 s₀ s₉ :=
    λ _ h ↦ for_1821242857744567453_concrete_of_post_abs (for_1821242857744567453_post_concrete_of_code.2 h)

lemma for_1821242857744567453_body_abs_of_code {s₀ : State} {fuel : Nat} :
  ∀ s₉, exec fuel (Block for_1821242857744567453_body) s₀ = s₉ →
        Spec ABody_for_1821242857744567453 s₀ s₉ :=
    λ _ h ↦ for_1821242857744567453_concrete_of_body_abs (for_1821242857744567453_body_concrete_of_code.2 h)

-- | Code → Abstract (autogenerated).
lemma for_1821242857744567453_abs_of_code {s₀ fuel} : ∀ s₉, exec fuel for_1821242857744567453 s₀ = s₉ → Spec AFor_for_1821242857744567453 s₀ s₉ := by
  intros s₉
  intros hcode
  apply reasoning_principle_3 for_1821242857744567453_cond for_1821242857744567453_post for_1821242857744567453_body ACond_for_1821242857744567453 APost_for_1821242857744567453 ABody_for_1821242857744567453 AFor_for_1821242857744567453 AZero_for_1821242857744567453 AOk_for_1821242857744567453 AContinue_for_1821242857744567453 ABreak_for_1821242857744567453 ALeave_for_1821242857744567453 @for_1821242857744567453_cond_abs_of_code @for_1821242857744567453_post_abs_of_code @for_1821242857744567453_body_abs_of_code hcode

end

end ERC20Shim.Common
