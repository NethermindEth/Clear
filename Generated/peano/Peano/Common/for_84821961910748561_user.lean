import Clear.ReasoningPrinciple

import Generated.peano.Peano.Common.if_6183625948864629624

import Generated.peano.Peano.Common.for_84821961910748561_gen


namespace Peano.Common

set_option autoImplicit false

section

open Clear EVMState Ast Expr Stmt FunctionDefinition State Interpreter ExecLemmas OutOfFuelLemmas Abstraction YulNotation PrimOps ReasoningPrinciple Utilities Peano.Common 

def ACond_for_84821961910748561 (s‚ÇÄ : State) : Literal := 1 
def APost_for_84821961910748561 (s‚ÇÄ s‚Çâ : State) : Prop := s‚Çâ = s‚ÇÄ‚ü¶"k"‚Ü¶(s‚ÇÄ["k"]!!) - 1‚üß
def ABody_for_84821961910748561 (s‚ÇÄ s‚Çâ : State) : Prop := s‚Çâ = if s‚ÇÄ["k"]!! = 0 then üíî s‚ÇÄ else s‚ÇÄ‚ü¶"x"‚Ü¶(s‚ÇÄ["x"]!!) + 1‚üß
def AFor_for_84821961910748561 (s‚ÇÄ s‚Çâ : State) : Prop := (s‚ÇÄ["x"]!!) + (s‚ÇÄ["k"]!!) = (s‚Çâ["x"]!!) ‚àß isPure s‚ÇÄ s‚Çâ ‚àß s‚Çâ.isOk

lemma for_84821961910748561_cond_abs_of_code {s‚ÇÄ fuel} : eval fuel for_84821961910748561_cond (s‚ÇÄ) = (s‚ÇÄ, ACond_for_84821961910748561 (s‚ÇÄ)) := by
  unfold eval ACond_for_84821961910748561
  aesop_spec

lemma for_84821961910748561_concrete_of_post_abs {s‚ÇÄ s‚Çâ : State} :
  Spec for_84821961910748561_post_concrete_of_code s‚ÇÄ s‚Çâ ‚Üí
  Spec APost_for_84821961910748561 s‚ÇÄ s‚Çâ := by
  unfold APost_for_84821961910748561 for_84821961910748561_post_concrete_of_code
  aesop_spec

lemma for_84821961910748561_concrete_of_body_abs {s‚ÇÄ s‚Çâ : State} :
  Spec for_84821961910748561_body_concrete_of_code s‚ÇÄ s‚Çâ ‚Üí
  Spec ABody_for_84821961910748561 s‚ÇÄ s‚Çâ := by
  unfold for_84821961910748561_body_concrete_of_code ABody_for_84821961910748561 A_if_6183625948864629624
  apply spec_eq; simp
  aesop_spec

lemma AZero_for_84821961910748561 : ‚àÄ s‚ÇÄ, isOk s‚ÇÄ ‚Üí ACond_for_84821961910748561 (üëå s‚ÇÄ) = 0 ‚Üí AFor_for_84821961910748561 s‚ÇÄ s‚ÇÄ := by
  unfold ACond_for_84821961910748561
  aesop_spec

lemma AOk_for_84821961910748561 : ‚àÄ s‚ÇÄ s‚ÇÇ s‚ÇÑ s‚ÇÖ, isOk s‚ÇÄ ‚Üí isOk s‚ÇÇ ‚Üí ¬¨ ‚ùì s‚ÇÖ ‚Üí ¬¨ ACond_for_84821961910748561 s‚ÇÄ = 0 ‚Üí ABody_for_84821961910748561 s‚ÇÄ s‚ÇÇ ‚Üí APost_for_84821961910748561 s‚ÇÇ s‚ÇÑ ‚Üí Spec AFor_for_84821961910748561 s‚ÇÑ s‚ÇÖ ‚Üí AFor_for_84821961910748561 s‚ÇÄ s‚ÇÖ := by
  unfold ABody_for_84821961910748561 APost_for_84821961910748561 AFor_for_84821961910748561
  intros s‚ÇÄ s‚ÇÇ s‚ÇÑ s‚ÇÖ h‚ÇÅ h‚ÇÇ h‚ÇÉ h‚ÇÑ h‚ÇÖ h‚ÇÜ h‚Çá
  rcases s‚ÇÑ with _ | _ | _ <;> [skip; aesop_spec; skip]
  ¬∑ clr_spec at h‚Çá
    split_ands <;> [skip; aesop_spec; tauto]
    by_cases eq : s‚ÇÄ["k"]!! = 0 <;> simp [eq] at h‚ÇÖ <;> [simp [h‚ÇÖ] at h‚ÇÇ; skip]
    rw [h‚ÇÜ] at h‚Çá; rw [h‚Çá.1.symm, h‚ÇÖ]; clr_varstore,
    ring
  ¬∑ have h : isOk (s‚ÇÇ‚ü¶"k"‚Ü¶(s‚ÇÇ["k"]!!) - 1‚üß) := by aesop
    simp [h‚ÇÜ.symm] at h

lemma AContinue_for_84821961910748561 : ‚àÄ s‚ÇÄ s‚ÇÇ s‚ÇÑ s‚ÇÖ, isOk s‚ÇÄ ‚Üí isContinue s‚ÇÇ ‚Üí ¬¨ ACond_for_84821961910748561 s‚ÇÄ = 0 ‚Üí ABody_for_84821961910748561 s‚ÇÄ s‚ÇÇ ‚Üí Spec APost_for_84821961910748561 (üßüs‚ÇÇ) s‚ÇÑ ‚Üí Spec AFor_for_84821961910748561 s‚ÇÑ s‚ÇÖ ‚Üí AFor_for_84821961910748561 s‚ÇÄ s‚ÇÖ := by
  unfold ABody_for_84821961910748561
  aesop_spec

lemma ABreak_for_84821961910748561 : ‚àÄ s‚ÇÄ s‚ÇÇ, isOk s‚ÇÄ ‚Üí isBreak s‚ÇÇ ‚Üí ¬¨ ACond_for_84821961910748561 s‚ÇÄ = 0 ‚Üí ABody_for_84821961910748561 s‚ÇÄ s‚ÇÇ ‚Üí AFor_for_84821961910748561 s‚ÇÄ (üßüs‚ÇÇ) := by
  unfold ABody_for_84821961910748561 AFor_for_84821961910748561
  aesop_spec

lemma ALeave_for_84821961910748561 : ‚àÄ s‚ÇÄ s‚ÇÇ, isOk s‚ÇÄ ‚Üí isLeave s‚ÇÇ ‚Üí ¬¨ ACond_for_84821961910748561 s‚ÇÄ = 0 ‚Üí ABody_for_84821961910748561 s‚ÇÄ s‚ÇÇ ‚Üí AFor_for_84821961910748561 s‚ÇÄ s‚ÇÇ := by
  unfold ABody_for_84821961910748561
  aesop_spec

end

end Peano.Common
